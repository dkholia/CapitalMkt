package com.dcsoft.security.config;
// Generated Nov 25, 2016 12:24:44 AM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * UserRoles generated by hbm2java
 */
@Entity
@Table(name = "user_roles", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = { "role",
		"username" }))
public class UserRoles implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8773298407866339460L;
	private int userRoleId;
	private Users users;
	private String role;
	private Set<Users> userses = new HashSet<Users>(0);

	public UserRoles() {
	}

	public UserRoles(int userRoleId, Users users, String role) {
		this.userRoleId = userRoleId;
		this.users = users;
		this.role = role;
	}

	public UserRoles(int userRoleId, Users users, String role, Set<Users> userses) {
		this.userRoleId = userRoleId;
		this.users = users;
		this.role = role;
		this.userses = userses;
	}

	@Id

	@Column(name = "user_role_id", unique = true, nullable = false)
	public int getUserRoleId() {
		return this.userRoleId;
	}

	public void setUserRoleId(int userRoleId) {
		this.userRoleId = userRoleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "username", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "role", nullable = false, length = 45)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "users_user_roles", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "userrole_user_role_id"), joinColumns = {
			@JoinColumn(name = "userrole_user_role_id", unique = true, nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "users_username", nullable = false, updatable = false) })
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

}
